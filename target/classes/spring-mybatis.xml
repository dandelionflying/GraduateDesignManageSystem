<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	
    <!-- 配置整合mybatis过程 -->
    <!-- 配置数据库相关参数 -->
    <context:property-placeholder location="classpath:db.properties"/>
    
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${dataSource.driverClass}" />
		<property name="jdbcUrl" value="${dataSource.jdbcUrl}" />
		<property name="user" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />

		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="${dataSource.maxPoolSize}" />
		<property name="minPoolSize" value="${dataSource.minPoolSize}" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
        
        
    </bean>
    <!-- sqlsessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="gdms.model" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
		
		<property name="plugins">
		    <!-- An array can contain multiple inner bean, ref, collection, or value 
				 elements. This configuration element will always result in an 
				 array, even when being defined e.g. as a value for a map with 
				 value type Object. -->
		    <array>
		        <bean class="com.github.pagehelper.PageInterceptor">
		            <property name="properties">
			          <!--使用下面的方式配置参数，一行配置一个 -->
			          <value>
			            reasonable=true
			            helperDialect=mysql
			          </value>
			        </property>
		        </bean>
		    </array>
		</property>
	</bean>
    
	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="gdms.dao" />
	</bean>


</beans>